services:
  strapi:
    container_name: strapi
    build: .
    image: strapi/strapi:5.3.0
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: postgres
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - ./_docker_volumes/public/uploads:/opt/app/public/uploads
      - ./config:/opt/app/config
      - ./src:/opt/app/src
      - ./package.json:/opt/package.json
      - ./yarn.lock:/opt/yarn.lock
      # - ./config:/opt/app/config
      # - ./src:/opt/app/src
      # - ./package.json:/opt/package.json
      # - ./yarn.lock:/opt/yarn.lock
      # - ./.env:/opt/app/.env
      # - ./public/uploads:/opt/app/public/uploads
    ports:
      - '1337:1337'
    networks:
      - strapi
    # user: '0:0'
    depends_on:
      - postgres
    #     condition: service_started

  postgres:
    container_name: postgres
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    env_file: .env
    image: postgres:14.13
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - ./_docker_volumes/postgres:/var/lib/postgresql/data
      # - strapi-data:/var/lib/postgresql/data/ # menggunakan volume untuk penyimpanan data
      # - ./data:/var/lib/postgresql/data/ # menggunakan folder lokal sebagai bind mount (opsional)
    ports:
      - '5432:5432'
    networks:
      - strapi

# volumes:
#   strapi-data:

networks:
  strapi:
    name: Strapi
    driver: bridge
